{"version":3,"file":"static/js/618.37ab26b5.chunk.js","mappings":"kNAGaA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAAC,IAAD,UACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,SAAC,IAAD,WACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA1C,SACGI,KAFUD,EADL,KASjB,C,8KCdYK,EAAmBC,EAAAA,EAAAA,KAAH,wIAOV,qBAAGC,MAAkBC,QAAQ,GAA7B,IAGNC,EAASH,EAAAA,EAAAA,MAAH,mWAqBNI,EAAYJ,EAAAA,EAAAA,OAAH,yK,6BC3BTK,EAAa,WAAO,IAAD,EAC9B,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCC,EAAAA,EAAAA,UAAQ,UAACF,EAAaG,IAAI,gBAAlB,QAA8B,IAAxE,eAAOC,EAAP,KAAkBC,EAAlB,KAWA,OACE,UAACb,EAAD,CAAkBc,SANC,SAAAC,GACnBA,EAAMC,iBACNP,EAAgB,CAAEQ,MAAOL,GAC1B,EAGC,WACE,SAACP,EAAD,CAAWa,KAAK,SAAhB,UACE,SAAC,MAAD,CAAUC,KAAK,YAEjB,SAACf,EAAD,CACEgB,MAAOR,EACP,aAAW,SACXS,KAAK,QACLC,UAAQ,EACRC,SAnBe,SAAC,GAA2B,IAAfH,EAAc,EAAxBI,OAAUJ,MAChCP,EAAaO,EACd,MAqBF,E,uCC1BYK,EAAS,WAAO,IAAD,EAC1B,GAAgBlB,EAAAA,EAAAA,MAChB,ECNiC,SAAAU,GACjC,OAA4BP,EAAAA,EAAAA,UAAS,IAArC,eAAOnB,EAAP,KAAemC,EAAf,KACA,GAA0BhB,EAAAA,EAAAA,UAAS,MAAnC,eAAOiB,EAAP,KAAcC,EAAd,KACA,GAA8BlB,EAAAA,EAAAA,WAAS,GAAvC,eAAOmB,EAAP,KAAgBC,EAAhB,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,2FAChBF,GAAW,GADK,mBAGOG,EAAAA,EAAAA,IAAgBhB,GAHvB,OAGRiB,EAHQ,OAKdR,EAAUQ,GALI,gDAOdN,EAAS,KAAMO,SAPD,yBASdL,GAAW,kBAAM,CAAN,IATG,4EAAH,qDAafE,GACD,GAAE,CAACf,IAEG,CAAE1B,OAAAA,EAAQoC,MAAAA,EAAOE,QAAAA,EACzB,CDjBoCO,CAAmB,WADtD,eAEQzB,IAAI,gBAD0C,QAC9B,IADhBpB,EAAR,EAAQA,OAAQoC,EAAhB,EAAgBA,MAAOE,EAAvB,EAAuBA,QAIvB,OACE,SAAC,KAAD,WACE,UAAC,KAAD,YACE,SAACvB,EAAD,IACCqB,IAAS,SAAC,KAAD,UAAUA,IACnBE,IAAW,SAACQ,EAAA,EAAD,IACX9C,EAAO+C,OAAS,IAAK,SAAChD,EAAA,EAAD,CAAYC,OAAQA,QAIjD,EAED,G","sources":["components/MoviesList/MoviesList.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","hooks/useFetchMoviesQuery.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport { GridItem, Grid } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <Grid>\n      {movies.map(({ id, title }) => (\n        <GridItem key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </Link>\n        </GridItem>\n      ))}\n    </Grid>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const SearchFormStyled = styled.form`\n  width: 350px;\n  margin-left: auto;\n  margin-right: auto;\n\n  position: relative;\n\n  margin-bottom: ${({ theme }) => theme.spacing(20)};\n`;\n\nexport const Select = styled.input`\n  width: 100%;\n  height: 50px;\n\n  border-style: none;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.5);\n  background-color: transparent;\n\n  padding: 10px;\n  font-size: 18px;\n  outline: none;\n  letter-spacing: 0.06em;\n  font-weight: 200;\n\n  transition: all 0.5s ease-in-out;\n\n  color: #fff;\n\n  cursor: pointer;\n`;\n\nexport const BtnSearch = styled.button`\n  width: 50px;\n  height: 50px;\n\n  font-size: 20px;\n  font-weight: bold;\n  color: #fff;\n\n  position: absolute;\n  top: 10px;\n  right: 0;\n`;\n","import { FiSearch } from 'react-icons/fi';\nimport { BtnSearch, Select, SearchFormStyled } from './SearchForm.styled';\n\nimport { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nexport const SearchForm = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movieName, setMovieName] = useState(searchParams.get('query') ?? '');\n\n  const handleChange = ({ target: { value } }) => {\n    setMovieName(value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchParams({ query: movieName });\n  };\n\n  return (\n    <SearchFormStyled onSubmit={handleSubmit}>\n      <BtnSearch type=\"submit\">\n        <FiSearch size=\"22px\" />\n      </BtnSearch>\n      <Select\n        value={movieName}\n        aria-label=\"select\"\n        name=\"query\"\n        required\n        onChange={handleChange}\n      ></Select>\n    </SearchFormStyled>\n  );\n};\n","import { Container, Heading, Section } from 'components/Home/Home.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { useFetchMoviesQuery } from 'hooks/useFetchMoviesQuery';\nimport { useSearchParams } from 'react-router-dom';\n\nexport const Movies = () => {\n  const [query] = useSearchParams();\n  const { movies, error, loading } = useFetchMoviesQuery(\n    query.get('query') ?? ''\n  );\n\n  return (\n    <Section>\n      <Container>\n        <SearchForm />\n        {error && <Heading>{error}</Heading>}\n        {loading && <Loader />}\n        {movies.length > 0 && <MoviesList movies={movies} />}\n      </Container>\n    </Section>\n  );\n};\n\nexport default Movies;\n","import { useEffect, useState } from 'react';\nimport { getMovieByQuery } from 'service/movies-service';\n\nexport const useFetchMoviesQuery = query => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const getMovies = async () => {\n      setLoading(true);\n      try {\n        const result = await getMovieByQuery(query);\n\n        setMovies(result);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(() => false);\n      }\n    };\n\n    getMovies();\n  }, [query]);\n\n  return { movies, error, loading };\n};\n"],"names":["MoviesList","movies","location","useLocation","map","id","title","to","state","from","SearchFormStyled","styled","theme","spacing","Select","BtnSearch","SearchForm","useSearchParams","searchParams","setSearchParams","useState","get","movieName","setMovieName","onSubmit","event","preventDefault","query","type","size","value","name","required","onChange","target","Movies","setMovies","error","setError","loading","setLoading","useEffect","getMovies","getMovieByQuery","result","message","useFetchMoviesQuery","Loader","length"],"sourceRoot":""}